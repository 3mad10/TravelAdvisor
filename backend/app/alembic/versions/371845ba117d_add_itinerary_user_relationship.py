"""Add itinerary-user relationship

Revision ID: 371845ba117d
Revises: 441ee6546eed
Create Date: 2025-08-03 00:30:15.600001

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '371845ba117d'
down_revision: Union[str, Sequence[str], None] = '441ee6546eed'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('itinraryactivitylink',
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('day', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], ),
    sa.PrimaryKeyConstraint('itinerary_id', 'activity_id')
    )
    op.create_table('useritinerary',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('itinerary_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('itineraryactivitylink')
    op.alter_column('activity', 'img_url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('itinerary', sa.Column('interests', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('itinerary', 'interests')
    op.alter_column('activity', 'img_url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('itineraryactivitylink',
    sa.Column('itinerary_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('activity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('day', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['activity_id'], ['activity.id'], name=op.f('itineraryactivitylink_activity_id_fkey')),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], name=op.f('itineraryactivitylink_itinerary_id_fkey')),
    sa.PrimaryKeyConstraint('itinerary_id', 'activity_id', name=op.f('itineraryactivitylink_pkey'))
    )
    op.drop_table('useritinerary')
    op.drop_table('itinraryactivitylink')
    # ### end Alembic commands ###
